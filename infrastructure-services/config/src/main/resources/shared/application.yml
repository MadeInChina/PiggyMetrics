management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
  stream:
    maxConcurrentConnections: 20
# https://github.com/spring-cloud/spring-cloud-netflix/issues/740
#  if you set hystrix.stream.amqp.send-id=false to allow disabling of sending the context id as the metric id, Turbine AMQP then defaults to serviceId:host:port.
    queue:
      send-id: false
    bus:
      enabled: true
  endpoint:
    enabled: true

eureka:
  instance:
    metadata-map:
      management.context-path: ${server.servlet.context-path:}/actuator
    leaseRenewalIntervalInSeconds: 10
    status-page-url-path: ${server.servlet.context-path:}/actuator/info
    health-check-url-path: ${server.servlet.context-path:}/actuator/health
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port:-0} #make the application unique on the rancher service layer
  client:
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: http://registry:8761/eureka/

security:
  oauth2:
    resource:
      user-info-uri: http://auth-service:5000/uaa/users/current
      token-info-uri: http://auth-service:5000/uaa/oauth/check_token

spring:
  application:
#  Key: spring.application.index
#  Reason: Application context ids are now unique by default.
#   index: ${random.uuid} #make the application unique on the rancher container layer,same service but with multi-instances.
  rabbitmq:
    host: rabbitmq
#  it's using spring-cloud-starter-bus-amqp in current project which means using rabbitmq as message bus for zipkin
#  zipkin:
#    base-url: http://tracing:9411
  sleuth:
    sampler:
      probability: 1.0
#For snapshots version,it's by default

# You can provide the `spring.sleuth.integration.patterns` pattern to explicitly provide the names of channels that you want to include for tracing.
 #-By default, all channels are included.	+By default, all channels but `hystrixStreamOutput` channel are included.
#Marcin Grzejszczak @marcingrzejszczak 00:59
#hey @MadeInChina . I’ve fixed spring-cloud/spring-cloud-sleuth#986 . Remove the integration and there’s nothing you should set to make things work. Can you please double check your code against latest snapshots?
# turns off tracing messaging. https://github.com/spring-cloud/spring-cloud-sleuth/issues/49
#    integration:
#      enabled: false

#If you use `spring-cloud-sleuth-stream` and `spring-cloud-netflix-hystrix-stream` together, a span is created for each Hystrix metrics and sent to Zipkin.
#-TIP: If you use `spring-cloud-sleuth-stream` and `spring-cloud-netflix-hystrix-stream` together, a span is created for each Hystrix metrics and sent to Zipkin.

#+This behavior may be annoying. That's why, by default, `spring.sleuth.scheduled.skipPattern=org.springframework.cloud.netflix.hystrix.stream.HystrixStreamTask`.
#  http://cloud.spring.io/spring-cloud-static/spring-cloud-sleuth/2.0.0.RC1/single/spring-cloud-sleuth.html
#  If you use spring-cloud-sleuth-stream and spring-cloud-netflix-hystrix-stream together, a span is created for each Hystrix metrics and sent to Zipkin. This behavior may be annoying. You can prevent it by setting spring.sleuth.scheduled.skipPattern=org.springframework.cloud.netflix.hystrix.stream.HystrixStreamTask
#    scheduled:
#      skip-pattern: org.springframework.cloud.netflix.hystrix.stream.HystrixStreamTask
  boot:
    admin:
      discovery:
        converter:
          management-context-path: ${server.servlet.context-path:}/actuator
feign:
  hystrix:
    enabled: true

logging:
  file: /app/log/application.log
  pattern:
    file: %clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(%-5level) %clr([%thread]){magenta} %logger{36} %clr(-){faint} %msg%n
  level:
    org.springframework.cloud.sleuth: DEBUG
    org.springframework.cloud.netflix.turbine: DEBUG
    org.springframework.cloud.netflix.hystrix: DEBUG